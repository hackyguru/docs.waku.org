"use strict";(self.webpackChunkwaku_guide=self.webpackChunkwaku_guide||[]).push([[74],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),o=n(86010);const r={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.default)(r.tabItem,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),r=n(86010),s=n(12466),i=n(70989),l=n(72389);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==i&&(d(t),l(a))},g=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:g,onClick:m},s,{className:(0,r.default)("tabs__item",c.tabItem,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function u(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function d(e){const t=(0,i.Y)(e);return o.createElement("div",{className:(0,r.default)("tabs-container",c.tabList)},o.createElement(p,(0,a.Z)({},e,t)),o.createElement(u,(0,a.Z)({},e,t)))}function m(e){const t=(0,l.default)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},58927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(87462),o=(n(67294),n(3905)),r=n(65488),s=n(85162);const i={title:"Quick Start"},l=void 0,c={unversionedId:"guides/js-waku/quick-start",id:"guides/js-waku/quick-start",title:"Quick Start",description:"This guide provides quick steps to start using the js-waku SDK by setting up a Waku node and sending messages using the Light Push protocol. Check out the installation guide for steps on adding js-waku to your project.",source:"@site/docs/guides/js-waku/quick-start.md",sourceDirName:"guides/js-waku",slug:"/guides/js-waku/quick-start",permalink:"/guides/js-waku/quick-start",draft:!1,editUrl:"https://github.com/waku-org/docs.waku.org/tree/develop/docs/guides/js-waku/quick-start.md",tags:[],version:"current",lastUpdatedAt:1689706272,formattedLastUpdatedAt:"Jul 18, 2023",frontMatter:{title:"Quick Start"},sidebar:"guides",previous:{title:"JavaScript Waku SDK",permalink:"/guides/js-waku/"},next:{title:"Send and Receive Messages Using Light Push and Filter",permalink:"/guides/js-waku/light-send-receive"}},p={},u=[{value:"Create a Light Node",id:"create-a-light-node",level:2},{value:"Connect to Remote Peers",id:"connect-to-remote-peers",level:2},{value:"Choose a Content Topic",id:"choose-a-content-topic",level:2},{value:"Create a Message Structure",id:"create-a-message-structure",level:2},{value:"Send Messages Using Light Push",id:"send-messages-using-light-push",level:2}],d={toc:u},m="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide provides quick steps to start using the ",(0,o.kt)("inlineCode",{parentName:"p"},"js-waku")," SDK by setting up a Waku node and sending messages using the ",(0,o.kt)("a",{parentName:"p",href:"/overview/concepts/protocols#light-push"},"Light Push protocol"),". Check out the ",(0,o.kt)("a",{parentName:"p",href:"/guides/js-waku/#installation"},"installation guide")," for steps on adding ",(0,o.kt)("inlineCode",{parentName:"p"},"js-waku")," to your project."),(0,o.kt)("h2",{id:"create-a-light-node"},"Create a Light Node"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"createLightNode()")," function to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Light Node")," and interact with the Waku Network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { createLightNode } from "@waku/sdk";\n\n// Create and start a Light Node\nconst node = await createLightNode({ defaultBootstrap: true });\nawait node.start();\n\n// Use the stop() function to stop a running node\n// await node.stop();\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"When the ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultBootstrap")," flag is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", your node will be bootstrapped using ",(0,o.kt)("a",{parentName:"p",href:"/overview/concepts/static-peers"},"pre-defined Waku nodes"),". The node does not connect to any remote peer or bootstrap node if omitted.")),(0,o.kt)("h2",{id:"connect-to-remote-peers"},"Connect to Remote Peers"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"waitForRemotePeer()")," function to wait for the node to connect with peers on the Waku Network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { waitForRemotePeer } from "@waku/sdk";\n\n// Wait for a successful peer connection\nawait waitForRemotePeer(node);\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"protocols")," option allows you to specify the ",(0,o.kt)("a",{parentName:"p",href:"/overview/concepts/protocols"},"protocols")," that the remote peers should have enabled:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { waitForRemotePeer, Protocols } from "@waku/sdk";\n\n// Wait for peer connections with specific protocols\nawait waitForRemotePeer(node, [\n    Protocols.Relay,\n    Protocols.Store,\n    Protocols.LightPush,\n    Protocols.Filter,\n]);\n')),(0,o.kt)("h2",{id:"choose-a-content-topic"},"Choose a Content Topic"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/overview/concepts/content-topics"},"Choose a content topic")," for your application and create an ",(0,o.kt)("inlineCode",{parentName:"p"},"encoder")," for ",(0,o.kt)("a",{parentName:"p",href:"https://rfc.vac.dev/spec/26/"},"message encryption"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { createEncoder } from "@waku/sdk";\n\n// Choose a content topic\nconst contentTopic = "/quick-start/1/message/proto";\n\n// Create a message encoder without encryption\nconst encoder = createEncoder({\n    contentTopic: contentTopic, // message content topic\n    ephemeral: false, // allows messages to be stored or not\n});\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"When the ",(0,o.kt)("inlineCode",{parentName:"p"},"ephemeral")," flag is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", your messages will not be stored by ",(0,o.kt)("inlineCode",{parentName:"p"},"Store")," nodes.")),(0,o.kt)("h2",{id:"create-a-message-structure"},"Create a Message Structure"),(0,o.kt)("p",null,"Create a message structure for your application using ",(0,o.kt)("a",{parentName:"p",href:"https://protobuf.dev/"},"Protocol Buffers")," (",(0,o.kt)("inlineCode",{parentName:"p"},"proto"),") for the following reasons:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Consistency:")," Ensures uniform message format for easy parsing and processing."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Interoperability:")," Facilitates effective communication between different parts of your application."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Compatibility:")," Allows smooth communication between older and newer app versions.")),(0,o.kt)("p",null,"To get started, install the ",(0,o.kt)("inlineCode",{parentName:"p"},"protobufjs")," package using your preferred package manager:"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install protobufjs\n"))),(0,o.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add protobufjs\n")))),(0,o.kt)("p",null,"You can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"protobufjs")," package via a CDN without installing it on your system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// Import the CDN\nimport "https://cdn.jsdelivr.net/npm/protobufjs@latest/dist/protobuf.min.js";\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Or include the protobufjs script --\x3e\n<script src="https://cdn.jsdelivr.net/npm/protobufjs@latest/dist/protobuf.min.js"><\/script>\n')),(0,o.kt)("p",null,"Next, create the message structure using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/protobufjs/protobuf.js#usage"},"Protobuf's valid message")," fields:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import protobuf from "protobufjs";\n\n// Create a message structure using Protobuf\nconst ChatMessage = new protobuf.Type("ChatMessage")\n    .add(new protobuf.Field("timestamp", 1, "uint64"))\n    .add(new protobuf.Field("sender", 2, "string"))\n    .add(new protobuf.Field("message", 3, "string"));\n')),(0,o.kt)("h2",{id:"send-messages-using-light-push"},"Send Messages Using Light Push"),(0,o.kt)("p",null,"To send messages using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Light Push")," protocol, create a new message object and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"lightPush.send()")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// Create a new message object\nconst protoMessage = ChatMessage.create({\n    timestamp: Date.now(),\n    sender: "Alice",\n    message: "Hello, World!",\n});\n\n// Serialize the message using Protobuf\nconst serializedMessage = ChatMessage.encode(protoMessage).finish();\n\n// Send the message using Light Push\nawait node.lightPush.send(encoder, {\n    payload: serializedMessage,\n});\n')),(0,o.kt)("admonition",{title:"Congratulations!",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You have successfully added decentralized communication features to your project using ",(0,o.kt)("inlineCode",{parentName:"p"},"js-waku"),". To run your application smoothly, you can wrap these functions in JavaScript, React, or any other framework.")))}g.isMDXComponent=!0}}]);